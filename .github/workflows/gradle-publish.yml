name: Deploy to EC2

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'oracle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          CI=false npm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_NICKNAME }}/react-lol:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Stop existing process on port 9832
            sudo lsof -ti:9832 | xargs -r sudo kill -9
            
            # Pull and run new Docker image
            docker pull ${{ secrets.DOCKER_NICKNAME }}/react-lol:latest
            docker stop react-lol-container || true
            docker rm react-lol-container || true
            docker run -d --name react-lol-container -p 9832:9832 ${{ secrets.DOCKER_NICKNAME }}/react-lol:latest
            
            # Create logs directory if it doesn't exist
            mkdir -p logs
            
            # Install serve globally
            npm install -g serve
            
            # Stop existing PM2 process if any
            pm2 stop all || true
            pm2 delete all || true
            
            # Start new PM2 process
            pm2 start ecosystem.config.js
            
            # Save PM2 process list and environment
            pm2 save
            
            # Generate startup script to restart PM2 on server reboot
            sudo env PATH=$PATH:/usr/bin /usr/local/lib/node_modules/pm2/bin/pm2 startup systemd -u ${{ secrets.EC2_USERNAME }} --hp /home/${{ secrets.EC2_USERNAME }}
            
            # Display PM2 logs
            pm2 logs --lines 50
            
            # Display Docker container logs
            docker logs react-lol-container --tail 50
            
            echo "Deployment completed. Check the logs above for any issues."